# Generated by Django 5.0.7 on 2024-08-04 12:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AudioInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("component_type", models.IntegerField()),
                ("component_tag", models.IntegerField()),
                ("is_main", models.BooleanField()),
                (
                    "sampling_rate",
                    models.IntegerField(
                        choices=[
                            (16000, "16 kHz"),
                            (22050, "22.05 kHz"),
                            (24000, "24 kHz"),
                            (32000, "32 kHz"),
                            (44100, "44.1 kHz"),
                            (48000, "48 kHz"),
                        ]
                    ),
                ),
                ("languages", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level1",
                    models.IntegerField(
                        choices=[
                            (0, "ニュース/報道"),
                            (1, "スポーツ"),
                            (2, "情報/ワイドショー"),
                            (3, "ドラマ"),
                            (4, "音楽"),
                            (5, "バラエティ"),
                            (6, "映画"),
                            (7, "アニメ/特撮"),
                            (8, "ドキュメンタリー/教養"),
                            (9, "劇場/公演"),
                            (10, "趣味/教育"),
                            (11, "福祉"),
                            (12, "予備"),
                            (13, "予備"),
                            (14, "拡張"),
                            (15, "その他"),
                        ]
                    ),
                ),
                (
                    "level2",
                    models.IntegerField(
                        choices=[
                            (0, "定時・総合"),
                            (1, "天気"),
                            (2, "特集・ドキュメント"),
                            (3, "政治・国会"),
                            (4, "経済・市況"),
                            (5, "海外・国際"),
                            (6, "解説"),
                            (7, "討論・会談"),
                            (8, "報道特番"),
                            (9, "ローカル・地域"),
                            (10, "交通"),
                            (15, "その他"),
                            (16, "スポーツニュース"),
                            (17, "野球"),
                            (18, "サッカー"),
                            (19, "ゴルフ"),
                            (20, "その他の球技"),
                            (21, "相撲・格闘技"),
                            (22, "オリンピック・国際大会"),
                            (23, "マラソン・陸上・水泳"),
                            (24, "モータースポーツ"),
                            (25, "マリン・ウィンタースポーツ"),
                            (26, "競馬・公営競技"),
                            (31, "その他"),
                            (32, "芸能・ワイドショー"),
                            (33, "ファッション"),
                            (34, "暮らし・住まい"),
                            (35, "健康・医療"),
                            (36, "ショッピング・通販"),
                            (37, "グルメ・料理"),
                            (38, "イベント"),
                            (39, "番組紹介・お知らせ"),
                            (47, "その他"),
                            (48, "国内ドラマ"),
                            (49, "海外ドラマ"),
                            (50, "時代劇"),
                            (63, "その他"),
                            (64, "国内ロック・ポップス"),
                            (65, "海外ロック・ポップス"),
                            (66, "クラシック・オペラ"),
                            (67, "ジャズ・フュージョン"),
                            (68, "歌謡曲・演歌"),
                            (69, "ライブ・コンサート"),
                            (70, "ランキング・リクエスト"),
                            (71, "カラオケ・のど自慢"),
                            (72, "民謡・邦楽"),
                            (73, "童謡・キッズ"),
                            (74, "民族音楽・ワールドミュージック"),
                            (79, "その他"),
                            (80, "クイズ"),
                            (81, "ゲーム"),
                            (82, "トークバラエティ"),
                            (83, "お笑い・コメディ"),
                            (84, "音楽バラエティ"),
                            (85, "旅バラエティ"),
                            (86, "料理バラエティ"),
                            (95, "その他"),
                            (96, "洋画"),
                            (97, "邦画"),
                            (98, "アニメ"),
                            (111, "その他"),
                            (112, "国内アニメ"),
                            (113, "海外アニメ"),
                            (114, "特撮"),
                            (127, "その他"),
                            (128, "社会・時事"),
                            (129, "歴史・紀行"),
                            (130, "自然・動物・環境"),
                            (131, "宇宙・科学・医学"),
                            (132, "カルチャー・伝統文化"),
                            (133, "文学・文芸"),
                            (134, "スポーツ"),
                            (135, "ドキュメンタリー全般"),
                            (136, "インタビュー・討論"),
                            (143, "その他"),
                            (144, "現代劇・新劇"),
                            (145, "ミュージカル"),
                            (146, "ダンス・バレエ"),
                            (147, "落語・演芸"),
                            (148, "歌舞伎・古典"),
                            (159, "その他"),
                            (224, "BS/地上デジタル放送用番組付属情報"),
                            (225, "広帯域 CS デジタル放送用拡張"),
                            (226, "サーバー型番組付属情報"),
                            (227, "IP 放送用番組付属情報"),
                            (239, "その他"),
                            (255, "その他"),
                        ]
                    ),
                ),
                ("user_nibble1", models.IntegerField()),
                ("user_nibble2", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="RelatedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("shared", "Shared"),
                            ("relay", "Relay"),
                            ("movement", "Movement"),
                        ],
                        max_length=50,
                    ),
                ),
                ("network_id", models.IntegerField()),
                ("service_id", models.IntegerField()),
                ("event_id", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="VideoInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video_type",
                    models.CharField(
                        choices=[
                            ("mpeg2", "MPEG-2"),
                            ("h.264", "H.264"),
                            ("h.265", "H.265"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "resolution",
                    models.CharField(
                        choices=[
                            ("240p", "240p"),
                            ("480i", "480i"),
                            ("480p", "480p"),
                            ("720p", "720p"),
                            ("1080i", "1080i"),
                            ("1080p", "1080p"),
                            ("2160p", "2160p"),
                            ("4320p", "4320p"),
                        ],
                        max_length=50,
                    ),
                ),
                ("stream_content", models.IntegerField()),
                ("component_type", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Program",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("program_id", models.BigIntegerField(unique=True)),
                ("event_id", models.BigIntegerField()),
                ("service_id", models.IntegerField()),
                ("network_id", models.IntegerField()),
                ("start_at", models.DateTimeField()),
                ("duration", models.DurationField()),
                ("is_free", models.BooleanField()),
                ("extended_info", models.JSONField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("pf_flag", models.BooleanField(blank=True, null=True)),
                (
                    "audio_infos",
                    models.ManyToManyField(blank=True, to="guide.audioinfo"),
                ),
                ("genres", models.ManyToManyField(blank=True, to="guide.genre")),
                (
                    "related_items",
                    models.ManyToManyField(blank=True, to="guide.relateditem"),
                ),
                (
                    "video_info",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="guide.videoinfo",
                    ),
                ),
            ],
        ),
    ]
